;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.generic-list, :imports nil, :requires {ui frontend.ui, frontend.ui frontend.ui, cljs.core.match cljs.core.match, s com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses nil, :defs {new-view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 70, :column 7, :end-line 70, :end-column 21, :arglists (quote ([item-spec]))}, :name frontend.generic-list/new-view-model, :variadic false, :file "src/frontend/generic_list.cljs", :end-column 21, :method-params ([item-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item-spec]))}, -update-items* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 13, :column 7, :end-line 13, :end-column 21, :arglists (quote ([model pred f & args])), :doc "Applies a function of args [gif-model & args] to the gif items specified by predicate.\n  The function can have side-effects. Returns a new model.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}}, :name frontend.generic-list/-update-items*, :variadic true, :file "src/frontend/generic_list.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}, :method-params [(model pred f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists ([model pred f & args]), :doc "Applies a function of args [gif-model & args] to the gif items specified by predicate.\n  The function can have side-effects. Returns a new model."}, init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([]))}, :name frontend.generic-list/init, :variadic false, :file "src/frontend/generic_list.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, -update-item {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([model id f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}}, :name frontend.generic-list/-update-item, :variadic true, :file "src/frontend/generic_list.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}, :method-params [(model id f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists ([model id f & args])}, new-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 29, :column 7, :end-line 29, :end-column 18, :arglists (quote ([item-spec]))}, :name frontend.generic-list/new-control, :variadic false, :file "src/frontend/generic_list.cljs", :end-column 18, :method-params ([item-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item-spec]))}, new-view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 85, :column 7, :end-line 85, :end-column 15, :arglists (quote ([item-spec]))}, :name frontend.generic-list/new-view, :variadic false, :file "src/frontend/generic_list.cljs", :end-column 15, :method-params ([item-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item-spec]))}, new-spec {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 94, :column 7, :end-line 94, :end-column 15, :arglists (quote ([item-spec & item-init-args])), :doc "Returns a spec for a list of items. Each new item will be initialized using item-init-args.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(item-spec item-init-args)], :arglists ([item-spec & item-init-args]), :arglists-meta (nil)}}, :name frontend.generic-list/new-spec, :variadic true, :file "src/frontend/generic_list.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(item-spec item-init-args)], :arglists ([item-spec & item-init-args]), :arglists-meta (nil)}, :method-params [(item-spec item-init-args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists ([item-spec & item-init-args]), :doc "Returns a spec for a list of items. Each new item will be initialized using item-init-args."}, new-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 53, :column 7, :end-line 53, :end-column 20, :arglists (quote ([item-spec item-init-args]))}, :name frontend.generic-list/new-reconcile, :variadic false, :file "src/frontend/generic_list.cljs", :end-column 20, :method-params ([item-spec item-init-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([item-spec item-init-args]))}, -item-views {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 77, :column 7, :end-line 77, :end-column 18, :arglists (quote ([items dispatch item-spec]))}, :name frontend.generic-list/-item-views, :variadic false, :file "src/frontend/generic_list.cljs", :end-column 18, :method-params ([items dispatch item-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 3, :fn-var true, :arglists (quote ([items dispatch item-spec]))}, -update-every-item {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/generic_list.cljs", :line 25, :column 7, :end-line 25, :end-column 25, :arglists (quote ([model f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}}, :name frontend.generic-list/-update-every-item, :variadic true, :file "src/frontend/generic_list.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}, :method-params [(model f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists ([model f & args])}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :on-item-signal :remove :insert :init :else :next-id :button :item :on-insert :item-action :on-connect-item :on-click :style :div :id :control :view-model :display :reconcile :items :on-remove :flex-direction :view}, :order [:items :next-id :item :id :else :on-item-signal :control :item-action :on-remove :remove :on-connect-item :on-connect :on-insert :insert :reconcile :init :view-model :div :style :display :flex-direction :view :button :on-click]}, :doc nil}