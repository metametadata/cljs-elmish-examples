;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.random-gif, :imports nil, :requires {cljs.core.match cljs.core.match}, :uses nil, :defs {init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([topic])), :doc "Creates a gif with specified topic and waiting indicator."}, :name frontend.random-gif/init, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :end-column 11, :method-params ([topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topic])), :doc "Creates a gif with specified topic and waiting indicator."}, new-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :line 10, :column 7, :end-line 10, :end-column 18, :arglists (quote ([gif-fetcher])), :doc "Example of using external dependency"}, :name frontend.random-gif/new-control, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :end-column 18, :method-params ([gif-fetcher]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-fetcher])), :doc "Example of using external dependency"}, reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([model action]))}, :name frontend.random-gif/reconcile, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :end-column 16, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action]))}, view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([model]))}, :name frontend.random-gif/view-model, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :end-column 17, :method-params ([model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([model]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([view-model dispatch]))}, :name frontend.random-gif/view, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :end-column 11, :method-params ([view-model dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([view-model dispatch]))}, new-spec {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :line 38, :column 7, :end-line 38, :end-column 15, :arglists (quote ([gif-fether]))}, :name frontend.random-gif/new-spec, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/random_gif.cljs", :end-column 15, :method-params ([gif-fether]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-fether]))}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :init :else :gif-url :button :strong :width :src :topic :on-click :style :div :control :view-model :set-new-gif :reconcile :on-request-more :img :view}, :order [:topic :gif-url :else :on-request-more :set-new-gif :on-connect :div :strong :button :on-click :img :style :src :width :init :view-model :view :control :reconcile]}, :doc nil}