;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.persistence-middleware, :imports nil, :requires {cljs.core.match cljs.core.match}, :uses nil, :defs {-wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/persistence_middleware.cljs", :line 6, :column 7, :end-line 6, :end-column 20, :arglists (quote ([control storage key load-blacklist]))}, :name frontend.persistence-middleware/-wrap-control, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/persistence_middleware.cljs", :end-column 20, :method-params ([control storage key load-blacklist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 4, :fn-var true, :arglists (quote ([control storage key load-blacklist]))}, -wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/persistence_middleware.cljs", :line 28, :column 7, :end-line 28, :end-column 22, :arglists (quote ([reconcile storage key save-blacklist]))}, :name frontend.persistence-middleware/-wrap-reconcile, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/persistence_middleware.cljs", :end-column 22, :method-params ([reconcile storage key save-blacklist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reconcile storage key save-blacklist]))}, wrap {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/persistence_middleware.cljs", :line 42, :column 7, :end-line 42, :end-column 11, :arglists (quote ([spec storage key blacklist])), :doc "On :on-connect signal middleware will load the model from storage and send the signal further with updated model to the component.\n  Blacklist should contain model keys which will not be saved and loaded."}, :name frontend.persistence-middleware/wrap, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/persistence_middleware.cljs", :end-column 11, :method-params ([spec storage key blacklist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 4, :fn-var true, :arglists (quote ([spec storage key blacklist])), :doc "On :on-connect signal middleware will load the model from storage and send the signal further with updated model to the component.\n  Blacklist should contain model keys which will not be saved and loaded."}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :else :not-found :control :reconcile :frontend.persistence-middleware/reset-from-storage}, :order [:on-connect :not-found :frontend.persistence-middleware/reset-from-storage :else :control :reconcile]}, :doc nil}