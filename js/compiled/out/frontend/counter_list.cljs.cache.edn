;; Analyzed by ClojureScript 1.7.122
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.counter-list, :imports nil, :requires {ui frontend.ui, frontend.ui frontend.ui, counter frontend.counter, frontend.counter frontend.counter, r reagent.core, reagent.core reagent.core, cljs.core.match cljs.core.match}, :uses nil, :defs {reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([model command]))}, :name frontend.counter-list/reconcile, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 16, :method-params ([model command]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model command]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 65, :column 7, :end-line 65, :end-column 11, :arglists (quote ([view-model dispatch]))}, :name frontend.counter-list/view, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 11, :method-params ([view-model dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([view-model dispatch]))}, model {:name frontend.counter-list/model, :file "src/frontend/counter_list.cljs", :line 72, :column 1, :end-line 72, :end-column 15, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 72, :column 10, :end-line 72, :end-column 15}}, update-counters* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 13, :column 7, :end-line 13, :end-column 23, :arglists (quote ([model pred f & args])), :doc "Applies a function of args [counter-model & args] to the counters specified by predicate.\n  The function can have side-effects. Returns a new model.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}}, :name frontend.counter-list/update-counters*, :variadic true, :file "src/frontend/counter_list.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}, :method-params [(model pred f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists ([model pred f & args]), :doc "Applies a function of args [counter-model & args] to the counters specified by predicate.\n  The function can have side-effects. Returns a new model."}, init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([]))}, :name frontend.counter-list/init, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-every-counter {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 27, :column 7, :end-line 27, :end-column 27, :arglists (quote ([model f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}}, :name frontend.counter-list/update-every-counter, :variadic true, :file "src/frontend/counter_list.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}, :method-params [(model f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists ([model f & args])}, update-counter {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 23, :column 7, :end-line 23, :end-column 21, :arglists (quote ([model id f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}}, :name frontend.counter-list/update-counter, :variadic true, :file "src/frontend/counter_list.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}, :method-params [(model id f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 3, :fn-var true, :arglists ([model id f & args])}, view-counter {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 61, :column 7, :end-line 61, :end-column 19, :arglists (quote ([[id view-model] dispatch]))}, :name frontend.counter-list/view-counter, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 19, :method-params ([p__27145 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[id view-model] dispatch]))}, control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 31, :column 7, :end-line 31, :end-column 14, :arglists (quote ([model event dispatch]))}, :name frontend.counter-list/control, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 14, :method-params ([model event dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([model event dispatch]))}, example-view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 73, :column 7, :end-line 73, :end-column 19, :arglists (quote ([]))}, :name frontend.counter-list/example-view, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/src/frontend/counter_list.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([model]))}, :name frontend.counter-list/view-model, :variadic false, :file "src/frontend/counter_list.cljs", :end-column 17, :method-params ([model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([model]))}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :on-modify :remove :insert :else :next-id :button :on-insert :counters :on-click :div :modify :on-remove}, :order [:counters :next-id :else :on-modify :modify :on-remove :remove :on-insert :insert :on-connect :button :on-click :div]}, :doc nil}