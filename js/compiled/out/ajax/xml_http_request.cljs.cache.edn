;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name ajax.xml-http-request, :imports nil, :requires {ajax.protocols ajax.protocols}, :uses {AjaxImpl ajax.protocols, Interceptor ajax.protocols, AjaxResponse ajax.protocols, AjaxRequest ajax.protocols}, :defs {ready-state {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/ajax/xml_http_request.cljs", :line 4, :column 7, :end-line 4, :end-column 18, :arglists (quote ([e]))}, :name ajax.xml-http-request/ready-state, :variadic false, :file "resources/public/js/compiled/out/ajax/xml_http_request.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, AjaxImpl {:impls (js/XMLHttpRequest)}, AjaxRequest {:impls (js/XMLHttpRequest)}, AjaxResponse {:impls (js/XMLHttpRequest)}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:not-initialized :method :response-format :processing-request :type :request-received :headers :response-ready :uri :timeout :body :connection-established :with-credentials}, :order [:not-initialized :connection-established :request-received :processing-request :response-ready :uri :method :body :headers :timeout :with-credentials :response-format :type]}, :doc nil}