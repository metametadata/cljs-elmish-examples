;; Analyzed by ClojureScript 1.7.170
{:use-macros {defparamspath com.rpl.specter.macros, paramspath com.rpl.specter.macros, paramscollector com.rpl.specter.macros, defparamscollector com.rpl.specter.macros, fixed-pathed-path com.rpl.specter.macros, variable-pathed-path com.rpl.specter.macros, pathed-collector com.rpl.specter.macros}, :excludes #{}, :name com.rpl.specter, :imports nil, :requires {com.rpl.specter.protocols com.rpl.specter.protocols, i com.rpl.specter.impl, com.rpl.specter.impl com.rpl.specter.impl, set clojure.set, clojure.set clojure.set}, :uses {StructurePath com.rpl.specter.protocols}, :defs {compiled-select-one {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 42, :column 7, :end-line 42, :end-column 26, :arglists (quote ([selector structure])), :doc "Version of select-one that takes in a selector pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-select-one, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 26, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Version of select-one that takes in a selector pre-compiled with comp-paths"}, comp-paths {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([& paths])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}}, :name com.rpl.specter/comp-paths, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}, :method-params [(paths)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists ([& paths])}, selected? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 242, :column 7, :end-line 242, :end-column 16, :arglists (quote ([& path])), :doc "Filters the current value based on whether a selector finds anything.\n  e.g. (selected? :vals ALL even?) keeps the current element only if an\n  even number exists for the :vals key.\n\n  The input path may be parameterized, in which case the result of selected?\n  will be parameterized in the order of which the parameterized selectors\n  were declared.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/selected?, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Filters the current value based on whether a selector finds anything.\n  e.g. (selected? :vals ALL even?) keeps the current element only if an\n  even number exists for the :vals key.\n\n  The input path may be parameterized, in which case the result of selected?\n  will be parameterized in the order of which the parameterized selectors\n  were declared."}, srange {:name com.rpl.specter/srange, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 157, :column 1, :end-line 160, :end-column 9, :doc "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 160, :column 3, :end-line 160, :end-column 9, :doc "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)"}}, view {:name com.rpl.specter/view, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 235, :column 1, :end-line 235, :end-column 20, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 235, :column 16, :end-line 235, :end-column 20}}, BEGINNING {:name com.rpl.specter/BEGINNING, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 168, :column 1, :end-line 168, :end-column 15, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 168, :column 6, :end-line 168, :end-column 15}}, LAST {:name com.rpl.specter/LAST, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 142, :column 1, :end-line 142, :end-column 10, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 142, :column 6, :end-line 142, :end-column 10}}, select {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 36, :column 7, :end-line 36, :end-column 13, :arglists (quote ([selector structure])), :doc "Navigates to and returns a sequence of all the elements specified by the selector."}, :name com.rpl.specter/select, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 13, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Navigates to and returns a sequence of all the elements specified by the selector."}, NIL->SET {:name com.rpl.specter/NIL->SET, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 332, :column 1, :end-line 332, :end-column 14, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 332, :column 6, :end-line 332, :end-column 14}}, srange-dynamic {:name com.rpl.specter/srange-dynamic, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 146, :column 1, :end-line 149, :end-column 17, :doc "Uses start-fn and end-fn to determine the bounds of the subsequence\n          to select when navigating. Each function takes in the structure as input.", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 149, :column 3, :end-line 149, :end-column 17, :doc "Uses start-fn and end-fn to determine the bounds of the subsequence\n          to select when navigating. Each function takes in the structure as input."}}, StructurePath {:impls (cljs.core/PersistentHashSet function cljs.core/Keyword)}, compiled-setval {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 91, :column 7, :end-line 91, :end-column 22, :arglists (quote ([selector val structure])), :doc "Version of setval that takes in a selector pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-setval, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 22, :method-params ([selector val structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([selector val structure])), :doc "Version of setval that takes in a selector pre-compiled with comp-paths"}, multi-path {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 390, :column 7, :end-line 390, :end-column 17, :arglists (quote ([& paths])), :doc "A path that branches on multiple paths. For updates,\n   applies updates to the paths in order.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}}, :name com.rpl.specter/multi-path, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}, :method-params [(paths)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 390, :end-line 390, :max-fixed-arity 0, :fn-var true, :arglists ([& paths]), :doc "A path that branches on multiple paths. For updates,\n   applies updates to the paths in order."}, setval {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 96, :column 7, :end-line 96, :end-column 13, :arglists (quote ([selector val structure])), :doc "Navigates to each value specified by the selector and replaces it by val"}, :name com.rpl.specter/setval, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 13, :method-params ([selector val structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([selector val structure])), :doc "Navigates to each value specified by the selector and replaces it by val"}, nil->val {:name com.rpl.specter/nil->val, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 322, :column 1, :end-line 325, :end-column 11, :doc "Navigates to the provided val if the structure is nil. Otherwise it stays\n          navigated at the structure.", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 325, :column 3, :end-line 325, :end-column 11, :doc "Navigates to the provided val if the structure is nil. Otherwise it stays\n          navigated at the structure."}}, putval {:name com.rpl.specter/putval, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 348, :column 1, :end-line 356, :end-column 9, :doc "Adds an external value to the collected vals. Useful when additional arguments\n     are required to the transform function that would otherwise require partial\n     application or a wrapper function.\n\n     e.g., incrementing val at path [:a :b] by 3:\n     (transform [:a :b (putval 3)] + some-map)", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 356, :column 3, :end-line 356, :end-column 9, :doc "Adds an external value to the collected vals. Useful when additional arguments\n     are required to the transform function that would otherwise require partial\n     application or a wrapper function.\n\n     e.g., incrementing val at path [:a :b] by 3:\n     (transform [:a :b (putval 3)] + some-map)"}}, codewalker {:name com.rpl.specter/codewalker, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 196, :column 1, :end-line 197, :end-column 13, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 197, :column 3, :end-line 197, :end-column 13}}, transform {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([selector transform-fn structure])), :doc "Navigates to each value specified by the selector and replaces it by the result of running\n  the transform-fn on it"}, :name com.rpl.specter/transform, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :method-params ([selector transform-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 3, :fn-var true, :arglists (quote ([selector transform-fn structure])), :doc "Navigates to each value specified by the selector and replaces it by the result of running\n  the transform-fn on it"}, select-one {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([selector structure])), :doc "Like select, but returns either one element or nil. Throws exception if multiple elements found"}, :name com.rpl.specter/select-one, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Like select, but returns either one element or nil. Throws exception if multiple elements found"}, filterer {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 204, :column 7, :end-line 204, :end-column 15, :arglists (quote ([& path])), :doc "Navigates to a view of the current sequence that only contains elements that\n  match the given selector path. An element matches the selector path if calling select\n  on that element with the selector path yields anything other than an empty sequence.\n\n   The input path may be parameterized, in which case the result of filterer\n   will be parameterized in the order of which the parameterized selectors\n   were declared.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/filterer, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Navigates to a view of the current sequence that only contains elements that\n  match the given selector path. An element matches the selector path if calling select\n  on that element with the selector path yields anything other than an empty sequence.\n\n   The input path may be parameterized, in which case the result of filterer\n   will be parameterized in the order of which the parameterized selectors\n   were declared."}, subset {:name com.rpl.specter/subset, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 172, :column 1, :end-line 176, :end-column 9, :doc "Navigates to the specified subset (by taking an intersection).\n          In a transform, that subset in the original set is changed to the\n          new value of the subset.", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 176, :column 3, :end-line 176, :end-column 9, :doc "Navigates to the specified subset (by taking an intersection).\n          In a transform, that subset in the original set is changed to the\n          new value of the subset."}}, pred {:name com.rpl.specter/pred, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 312, :column 1, :end-line 315, :end-column 7, :doc "Keeps the element only if it matches the supplied predicate. This is the\n          late-bound parameterized version of using a function directly in a path.", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 315, :column 3, :end-line 315, :end-column 7, :doc "Keeps the element only if it matches the supplied predicate. This is the\n          late-bound parameterized version of using a function directly in a path."}}, bind-params* {:name com.rpl.specter/bind-params*, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 131, :column 1, :end-line 134, :end-column 15, :doc "Takes a compiled selector that needs late-bound params and supplies it with\n             an array of params and a position in the array from which to begin reading\n             params. The return value is an executable selector.", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 134, :column 3, :end-line 134, :end-column 15, :doc "Takes a compiled selector that needs late-bound params and supplies it with\n             an array of params and a position in the array from which to begin reading\n             params. The return value is an executable selector."}}, compiled-select-one! {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 56, :column 7, :end-line 56, :end-column 27, :arglists (quote ([selector structure])), :doc "Version of select-one! that takes in a selector pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-select-one!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 27, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Version of select-one! that takes in a selector pre-compiled with comp-paths"}, collect-one {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 342, :column 7, :end-line 342, :end-column 18, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/collect-one, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, NIL->LIST {:name com.rpl.specter/NIL->LIST, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 333, :column 1, :end-line 333, :end-column 15, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 333, :column 6, :end-line 333, :end-column 15}}, transformed {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 276, :column 7, :end-line 276, :end-column 18, :arglists (quote ([path update-fn])), :doc "Navigates to a view of the current value by transforming it with the\n   specified selector and update-fn.\n\n   The input path may be parameterized, in which case the result of transformed\n   will be parameterized in the order of which the parameterized selectors\n   were declared."}, :name com.rpl.specter/transformed, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 18, :method-params ([path update-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path update-fn])), :doc "Navigates to a view of the current value by transforming it with the\n   specified selector and update-fn.\n\n   The input path may be parameterized, in which case the result of transformed\n   will be parameterized in the order of which the parameterized selectors\n   were declared."}, compiled-select {:name com.rpl.specter/compiled-select, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 33, :column 1, :end-line 34, :end-column 18, :doc "Version of select that takes in a selector pre-compiled with comp-paths", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 34, :column 3, :end-line 34, :end-column 18, :doc "Version of select that takes in a selector pre-compiled with comp-paths"}}, VAL {:name com.rpl.specter/VAL, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 140, :column 1, :end-line 140, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 140, :column 6, :end-line 140, :end-column 9}}, cond-path {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 361, :column 7, :end-line 361, :end-column 16, :arglists (quote ([& conds])), :doc "Takes in alternating cond-path selector cond-path selector...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following selector for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.\n\n   The input paths may be parameterized, in which case the result of cond-path\n   will be parameterized in the order of which the parameterized selectors\n   were declared.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(conds)], :arglists ([& conds]), :arglists-meta (nil)}}, :name com.rpl.specter/cond-path, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(conds)], :arglists ([& conds]), :arglists-meta (nil)}, :method-params [(conds)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 0, :fn-var true, :arglists ([& conds]), :doc "Takes in alternating cond-path selector cond-path selector...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following selector for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.\n\n   The input paths may be parameterized, in which case the result of cond-path\n   will be parameterized in the order of which the parameterized selectors\n   were declared."}, NIL->VECTOR {:name com.rpl.specter/NIL->VECTOR, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 334, :column 1, :end-line 334, :end-column 17, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 334, :column 6, :end-line 334, :end-column 17}}, compiled-select-first {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 69, :column 7, :end-line 69, :end-column 28, :arglists (quote ([selector structure])), :doc "Version of select-first that takes in a selector pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-select-first, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 28, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Version of select-first that takes in a selector pre-compiled with comp-paths"}, compiled-transform {:name com.rpl.specter/compiled-transform, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 82, :column 1, :end-line 83, :end-column 21, :doc "Version of transform that takes in a selector pre-compiled with comp-paths", :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 83, :column 3, :end-line 83, :end-column 21, :doc "Version of transform that takes in a selector pre-compiled with comp-paths"}}, select-first {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 74, :column 7, :end-line 74, :end-column 19, :arglists (quote ([selector structure])), :doc "Returns first element found. Not any more efficient than select, just a convenience"}, :name com.rpl.specter/select-first, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 19, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Returns first element found. Not any more efficient than select, just a convenience"}, not-selected? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 263, :column 7, :end-line 263, :end-column 20, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/not-selected?, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, FIRST {:name com.rpl.specter/FIRST, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 144, :column 1, :end-line 144, :end-column 11, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 144, :column 6, :end-line 144, :end-column 11}}, collect {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 336, :column 7, :end-line 336, :end-column 14, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/collect, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, END {:name com.rpl.specter/END, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 170, :column 1, :end-line 170, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 170, :column 6, :end-line 170, :end-column 9}}, replace-in {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 120, :column 7, :end-line 120, :end-column 17, :arglists (quote ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}])), :doc "Similar to transform, except returns a pair of [transformed-structure sequence-of-user-ret].\n  The transform-fn in this case is expected to return [ret user-ret]. ret is\n   what's used to transform the data structure, while user-ret will be added to the user-ret sequence\n   in the final return. replace-in is useful for situations where you need to know the specific values\n   of what was transformd in the data structure.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(selector transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}}, :name com.rpl.specter/replace-in, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(selector transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}, :method-params [(selector transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 3, :fn-var true, :arglists ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :doc "Similar to transform, except returns a pair of [transformed-structure sequence-of-user-ret].\n  The transform-fn in this case is expected to return [ret user-ret]. ret is\n   what's used to transform the data structure, while user-ret will be added to the user-ret sequence\n   in the final return. replace-in is useful for situations where you need to know the specific values\n   of what was transformd in the data structure."}, keypath {:name com.rpl.specter/keypath, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 228, :column 1, :end-line 228, :end-column 23, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 228, :column 16, :end-line 228, :end-column 23}}, select-one! {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 64, :column 7, :end-line 64, :end-column 18, :arglists (quote ([selector structure])), :doc "Returns exactly one element, throws exception if zero or multiple elements found"}, :name com.rpl.specter/select-one!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 18, :method-params ([selector structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector structure])), :doc "Returns exactly one element, throws exception if zero or multiple elements found"}, compiled-replace-in {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 101, :column 7, :end-line 101, :end-column 26, :arglists (quote ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}])), :doc "Version of replace-in that takes in a selector pre-compiled with comp-paths", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(selector transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}}, :name com.rpl.specter/compiled-replace-in, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(selector transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}, :method-params [(selector transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 3, :fn-var true, :arglists ([selector transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :doc "Version of replace-in that takes in a selector pre-compiled with comp-paths"}, walker {:name com.rpl.specter/walker, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 188, :column 1, :end-line 189, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 189, :column 3, :end-line 189, :end-column 9}}, if-path {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 384, :column 7, :end-line 384, :end-column 14, :arglists (quote ([cond-p if-path] [cond-p if-path else-path])), :doc "Like cond-path, but with if semantics.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([cond-p if-path] [cond-p if-path else-path]), :arglists ([cond-p if-path] [cond-p if-path else-path]), :arglists-meta (nil nil)}}, :name com.rpl.specter/if-path, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([cond-p if-path] [cond-p if-path else-path]), :arglists ([cond-p if-path] [cond-p if-path else-path]), :arglists-meta (nil nil)}, :method-params ([cond-p if-path] [cond-p if-path else-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 3, :fn-var true, :arglists ([cond-p if-path] [cond-p if-path else-path]), :doc "Like cond-path, but with if semantics."}, ALL {:name com.rpl.specter/ALL, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 138, :column 1, :end-line 138, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 138, :column 6, :end-line 138, :end-column 9}}}, :require-macros {com.rpl.specter.macros com.rpl.specter.macros}, :cljs.analyzer/constants {:seen #{:merge-fn}, :order [:merge-fn]}, :doc nil}