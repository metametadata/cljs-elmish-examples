;; Analyzed by ClojureScript 1.7.170
{:name com.rpl.specter.protocols, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {StructurePath {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :line 3, :column 14, :end-line 3, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {select* [[this structure next-fn]], transform* [[this structure next-fn]]}}}, :protocol-symbol true, :name com.rpl.specter.protocols/StructurePath, :file "resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :end-column 27, :column 1, :line 3, :protocol-info {:methods {select* [[this structure next-fn]], transform* [[this structure next-fn]]}}, :info nil, :end-line 3, :impls #{}, :doc nil, :jsdoc ("@interface")}, select* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :line 4, :column 4, :end-line 4, :end-column 11, :protocol com.rpl.specter.protocols/StructurePath, :doc nil, :arglists (quote ([this structure next-fn]))}, :protocol com.rpl.specter.protocols/StructurePath, :name com.rpl.specter.protocols/select*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :end-column 11, :method-params ([this structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this structure next-fn])), :doc nil}, transform* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :line 5, :column 4, :end-line 5, :end-column 14, :protocol com.rpl.specter.protocols/StructurePath, :doc nil, :arglists (quote ([this structure next-fn]))}, :protocol com.rpl.specter.protocols/StructurePath, :name com.rpl.specter.protocols/transform*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :end-column 14, :method-params ([this structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this structure next-fn])), :doc nil}, Collector {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :line 7, :column 14, :end-line 7, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {collect-val [[this structure]]}}}, :protocol-symbol true, :name com.rpl.specter.protocols/Collector, :file "resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :end-column 23, :column 1, :line 7, :protocol-info {:methods {collect-val [[this structure]]}}, :info nil, :end-line 7, :impls #{}, :doc nil, :jsdoc ("@interface")}, collect-val {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :line 8, :column 4, :end-line 8, :end-column 15, :protocol com.rpl.specter.protocols/Collector, :doc nil, :arglists (quote ([this structure]))}, :protocol com.rpl.specter.protocols/Collector, :name com.rpl.specter.protocols/collect-val, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/protocols.cljs", :end-column 15, :method-params ([this structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this structure])), :doc nil}}}