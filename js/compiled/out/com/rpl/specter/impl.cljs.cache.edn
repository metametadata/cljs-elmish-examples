;; Analyzed by ClojureScript 1.7.122
{:use-macros {mk-optimized-invocation com.rpl.specter.prot-opt-invoke, define-ParamsNeededPath com.rpl.specter.defhelpers}, :excludes #{}, :name com.rpl.specter.impl, :imports nil, :requires {com.rpl.specter.protocols com.rpl.specter.protocols, p com.rpl.specter.protocols, walk clojure.walk, clojure.walk clojure.walk, r clojure.core.reducers, clojure.core.reducers clojure.core.reducers, s clojure.string, clojure.string clojure.string}, :uses {transform* com.rpl.specter.protocols, select* com.rpl.specter.protocols, collect-val com.rpl.specter.protocols}, :defs {ExecutorFunctions {:num-fields 3, :protocols #{}, :name com.rpl.specter.impl/ExecutorFunctions, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 27, :type true, :column 10, :line 43, :record false, :end-line 43, :skip-protocol-flag nil}, PMutableCell {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 349, :column 14, :end-line 349, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {set_cell [[cell x]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/PMutableCell, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :column 1, :line 349, :protocol-info {:methods {set_cell [[cell x]]}}, :info nil, :end-line 349, :impls #{com.rpl.specter.impl/MutableCell}, :doc nil, :jsdoc ("@interface")}, key-select {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 472, :column 7, :end-line 472, :end-column 17, :arglists (quote ([akey structure next-fn]))}, :name com.rpl.specter.impl/key-select, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 17, :method-params ([akey structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 3, :fn-var true, :arglists (quote ([akey structure next-fn]))}, ValCollect {:num-fields 0, :protocols #{}, :name com.rpl.specter.impl/ValCollect, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 20, :type true, :column 10, :line 493, :record false, :end-line 493, :skip-protocol-flag nil}, ->MutableCell {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 353, :column 10, :end-line 353, :end-column 21, :protocols #{com.rpl.specter.impl/PMutableCell}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([q]))}, :protocols #{com.rpl.specter.impl/PMutableCell}, :name com.rpl.specter.impl/->MutableCell, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q])), :skip-protocol-flag nil}, ->CompiledPath {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 71, :column 12, :end-line 71, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([transform-fns params params-idx]))}, :name com.rpl.specter.impl/->CompiledPath, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 24, :method-params ([transform-fns params params-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform-fns params params-idx]))}, set-first-list {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 381, :column 8, :end-line 381, :end-column 22, :private true, :arglists (quote ([l v]))}, :private true, :name com.rpl.specter.impl/set-first-list, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 22, :method-params ([l v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l v]))}, comp-paths* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 22, :column 4, :end-line 22, :end-column 15, :protocol com.rpl.specter.impl/PathComposer, :doc nil, :arglists (quote ([paths]))}, :protocol com.rpl.specter.impl/PathComposer, :name com.rpl.specter.impl/comp-paths*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 15, :method-params ([paths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paths])), :doc nil}, walk-until {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 400, :column 7, :end-line 400, :end-column 17, :arglists (quote ([pred on-match-fn structure]))}, :name com.rpl.specter.impl/walk-until, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 17, :method-params ([pred on-match-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred on-match-fn structure]))}, extype {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 237, :column 7, :end-line 237, :end-column 13, :arglists (quote ([f]))}, :name com.rpl.specter.impl/extype, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 13, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, capture-params-internally {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 281, :column 7, :end-line 281, :end-column 32, :arglists (quote ([path]))}, :name com.rpl.specter.impl/capture-params-internally, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 32, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, set-last {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 379, :column 4, :end-line 379, :end-column 12, :protocol com.rpl.specter.impl/SetExtremes, :doc nil, :arglists (quote ([s val]))}, :protocol com.rpl.specter.impl/SetExtremes, :name com.rpl.specter.impl/set-last, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 12, :method-params ([s val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 379, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s val])), :doc nil}, PosStructurePath {:num-fields 2, :protocols #{}, :name com.rpl.specter.impl/PosStructurePath, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :type true, :column 10, :line 500, :record false, :end-line 500, :skip-protocol-flag nil}, update-cell! {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 369, :column 7, :end-line 369, :end-column 19, :arglists (quote ([cell afn]))}, :name com.rpl.specter.impl/update-cell!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 19, :method-params ([cell afn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell afn]))}, coerce-collector {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 157, :column 7, :end-line 157, :end-column 23, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-collector, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, mutable-cell {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 358, :column 7, :end-line 358, :end-column 19, :arglists (quote ([] [init])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [init]), :arglists ([] [init]), :arglists-meta (nil nil)}}, :name com.rpl.specter.impl/mutable-cell, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [init]), :arglists ([] [init]), :arglists-meta (nil nil)}, :method-params ([] [init]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 358, :end-line 358, :max-fixed-arity 1, :fn-var true, :arglists ([] [init])}, compiled-transform* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 430, :column 7, :end-line 430, :end-column 26, :arglists (quote ([path transform-fn structure]))}, :name com.rpl.specter.impl/compiled-transform*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :method-params ([path transform-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 430, :end-line 430, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path transform-fn structure]))}, map->CompiledPath {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 71, :column 12, :end-line 71, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__28180]))}, :name com.rpl.specter.impl/map->CompiledPath, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 24, :method-params ([G__28180]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28180]))}, selected?* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 443, :column 7, :end-line 443, :end-column 17, :arglists (quote ([compiled-path structure]))}, :name com.rpl.specter.impl/selected?*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 17, :method-params ([compiled-path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 2, :fn-var true, :arglists (quote ([compiled-path structure]))}, compiled-path? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 73, :column 7, :end-line 73, :end-column 21, :arglists (quote ([o]))}, :name com.rpl.specter.impl/compiled-path?, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, ->AllStructurePath {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 479, :column 10, :end-line 479, :end-column 26, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name com.rpl.specter.impl/->AllStructurePath, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 479, :end-line 479, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, ->ParamsNeededPath {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([transform-fns num-needed-params])), :file nil}, :name com.rpl.specter.impl/->ParamsNeededPath, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :method-params ([transform-fns num-needed-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([transform-fns num-needed-params]))}, set_cell {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 351, :column 4, :end-line 351, :end-column 12, :protocol com.rpl.specter.impl/PMutableCell, :doc nil, :arglists (quote ([cell x]))}, :protocol com.rpl.specter.impl/PMutableCell, :name com.rpl.specter.impl/set_cell, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 12, :method-params ([cell x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 349, :end-line 351, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell x])), :doc nil}, combine-same-types {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 242, :column 8, :end-line 242, :end-column 26, :private true, :arglists (quote ([[f & _ :as all]]))}, :private true, :name com.rpl.specter.impl/combine-same-types, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :method-params ([p__28434]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[f & _ :as all]]))}, bind-params* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 106, :column 7, :end-line 106, :end-column 19, :arglists (quote ([params-needed-path params idx]))}, :name com.rpl.specter.impl/bind-params*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 19, :method-params ([params-needed-path params idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 3, :fn-var true, :arglists (quote ([params-needed-path params idx]))}, seq-contains? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 112, :column 8, :end-line 112, :end-column 21, :private true, :arglists (quote ([aseq val]))}, :private true, :name com.rpl.specter.impl/seq-contains?, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([aseq val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([aseq val]))}, CompiledPath {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name com.rpl.specter.impl/CompiledPath, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 24, :type true, :column 12, :internal-ctor true, :line 71, :record true, :end-line 71, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, filter+ancestry {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 459, :column 7, :end-line 459, :end-column 22, :arglists (quote ([path aseq]))}, :name com.rpl.specter.impl/filter+ancestry, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 22, :method-params ([path aseq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 459, :end-line 459, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path aseq]))}, spy {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 17, :column 7, :end-line 17, :end-column 10, :arglists (quote ([e]))}, :name com.rpl.specter.impl/spy, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 10, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, no-params-compiled-path {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 76, :column 7, :end-line 76, :end-column 30, :arglists (quote ([transform-fns]))}, :name com.rpl.specter.impl/no-params-compiled-path, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 30, :method-params ([transform-fns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([transform-fns]))}, coerce-structure-path-rich {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 183, :column 7, :end-line 183, :end-column 33, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-structure-path-rich, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 33, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, filter-select {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 545, :column 7, :end-line 545, :end-column 20, :arglists (quote ([afn structure next-fn]))}, :name com.rpl.specter.impl/filter-select, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 20, :method-params ([afn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 545, :end-line 545, :max-fixed-arity 3, :fn-var true, :arglists (quote ([afn structure next-fn]))}, CoercePath {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 199, :column 14, :end-line 199, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {coerce-path [[this]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/CoercePath, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 24, :column 1, :line 199, :protocol-info {:methods {coerce-path [[this]]}}, :info nil, :end-line 199, :impls #{nil com.rpl.specter.impl/ParamsNeededPath cljs.core/IndexedSeq cljs.core/EmptyList default cljs.core/PersistentVector cljs.core/List com.rpl.specter.impl/CompiledPath}, :doc nil, :jsdoc ("@interface")}, PathComposer {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 21, :column 14, :end-line 21, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {comp-paths* [[paths]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/PathComposer, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :column 1, :line 21, :protocol-info {:methods {comp-paths* [[paths]]}}, :info nil, :end-line 21, :impls #{nil default cljs.core/PersistentVector}, :doc nil, :jsdoc ("@interface")}, TransformFunctions {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name com.rpl.specter.impl/TransformFunctions, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 30, :type true, :column 12, :internal-ctor true, :line 69, :record true, :end-line 69, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, StructurePathExecutor {:name com.rpl.specter.impl/StructurePathExecutor, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 60, :column 1, :end-line 60, :end-column 27, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 60, :column 6, :end-line 60, :end-column 27}}, retrieve-cond-selector {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 534, :column 7, :end-line 534, :end-column 29, :arglists (quote ([cond-paths structure]))}, :name com.rpl.specter.impl/retrieve-cond-selector, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 29, :method-params ([cond-paths structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 534, :end-line 534, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cond-paths structure]))}, srange-select {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 512, :column 7, :end-line 512, :end-column 20, :arglists (quote ([structure start end next-fn]))}, :name com.rpl.specter.impl/srange-select, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 20, :method-params ([structure start end next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 512, :end-line 512, :max-fixed-arity 4, :fn-var true, :arglists (quote ([structure start end next-fn]))}, append {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 374, :column 8, :end-line 374, :end-column 14, :private true, :arglists (quote ([coll elem]))}, :private true, :name com.rpl.specter.impl/append, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 14, :method-params ([coll elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 374, :end-line 374, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll elem]))}, conj-all! {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 420, :column 8, :end-line 420, :end-column 17, :private true, :arglists (quote ([cell elems]))}, :private true, :name com.rpl.specter.impl/conj-all!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 17, :method-params ([cell elems]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell elems]))}, set-cell! {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 362, :column 7, :end-line 362, :end-column 16, :arglists (quote ([cell val]))}, :name com.rpl.specter.impl/set-cell!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 16, :method-params ([cell val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell val]))}, ->ExecutorFunctions {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 43, :column 10, :end-line 43, :end-column 27, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([type select-executor transform-executor]))}, :protocols #{}, :name com.rpl.specter.impl/->ExecutorFunctions, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 27, :method-params ([type select-executor transform-executor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type select-executor transform-executor])), :skip-protocol-flag nil}, coerce-path {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 200, :column 4, :end-line 200, :end-column 15, :protocol com.rpl.specter.impl/CoercePath, :doc nil, :arglists (quote ([this]))}, :protocol com.rpl.specter.impl/CoercePath, :name com.rpl.specter.impl/coerce-path, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, map->TransformFunctions {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 69, :column 12, :end-line 69, :end-column 30, :internal-ctor true, :factory :map, :arglists (quote ([G__28172]))}, :name com.rpl.specter.impl/map->TransformFunctions, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 30, :method-params ([G__28172]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28172]))}, structure-path-impl {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 147, :column 7, :end-line 147, :end-column 26, :arglists (quote ([obj]))}, :name com.rpl.specter.impl/structure-path-impl, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, MutableCell {:num-fields 1, :protocols #{com.rpl.specter.impl/PMutableCell}, :name com.rpl.specter.impl/MutableCell, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :type true, :column 10, :line 353, :record false, :end-line 353, :skip-protocol-flag nil}, structure-path? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 196, :column 7, :end-line 196, :end-column 22, :arglists (quote ([obj]))}, :name com.rpl.specter.impl/structure-path?, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 22, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, throw-illegal {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 34, :column 7, :end-line 34, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name com.rpl.specter.impl/throw-illegal, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, collector-impl {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 153, :column 7, :end-line 153, :end-column 21, :arglists (quote ([obj]))}, :name com.rpl.specter.impl/collector-impl, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, num-needed-params {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 342, :column 7, :end-line 342, :end-column 24, :arglists (quote ([path]))}, :name com.rpl.specter.impl/num-needed-params, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 24, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, SetExtremes {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 377, :column 14, :end-line 377, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {set-first [[s val]], set-last [[s val]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/SetExtremes, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 25, :column 1, :line 377, :protocol-info {:methods {set-first [[s val]], set-last [[s val]]}}, :info nil, :end-line 377, :impls #{default cljs.core/PersistentVector}, :doc nil, :jsdoc ("@interface")}, coerce-structure-path {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 170, :column 7, :end-line 170, :end-column 28, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-structure-path, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, no-prot-error-str {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 118, :column 7, :end-line 118, :end-column 24, :arglists (quote ([obj]))}, :name com.rpl.specter.impl/no-prot-error-str, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 24, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, benchmark {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([iters afn]))}, :name com.rpl.specter.impl/benchmark, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 16, :method-params ([iters afn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([iters afn]))}, set-last-list {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 384, :column 8, :end-line 384, :end-column 21, :private true, :arglists (quote ([l v]))}, :private true, :name com.rpl.specter.impl/set-last-list, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([l v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l v]))}, ParamsNeededPath {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name com.rpl.specter.impl/ParamsNeededPath, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :type true, :column 1, :internal-ctor true, :line 91, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->ParamsNeededPath {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__28399])), :file nil}, :name com.rpl.specter.impl/map->ParamsNeededPath, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :method-params ([G__28399]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28399]))}, RichPathExecutor {:name com.rpl.specter.impl/RichPathExecutor, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 45, :column 1, :end-line 45, :end-column 22, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 45, :column 6, :end-line 45, :end-column 22}}, ->TransformFunctions {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 69, :column 12, :end-line 69, :end-column 30, :internal-ctor true, :factory :positional, :arglists (quote ([executors selector transformer]))}, :name com.rpl.specter.impl/->TransformFunctions, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 30, :method-params ([executors selector transformer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 69, :end-line 69, :max-fixed-arity 3, :fn-var true, :arglists (quote ([executors selector transformer]))}, filter-transform {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 549, :column 7, :end-line 549, :end-column 23, :arglists (quote ([afn structure next-fn]))}, :name com.rpl.specter.impl/filter-transform, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 23, :method-params ([afn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 549, :end-line 549, :max-fixed-arity 3, :fn-var true, :arglists (quote ([afn structure next-fn]))}, compiled-select* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 423, :column 7, :end-line 423, :end-column 23, :arglists (quote ([path structure]))}, :name com.rpl.specter.impl/compiled-select*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 23, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure]))}, not-selected?* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 437, :column 7, :end-line 437, :end-column 21, :arglists (quote ([compiled-path structure]))}, :name com.rpl.specter.impl/not-selected?*, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([compiled-path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 437, :end-line 437, :max-fixed-arity 2, :fn-var true, :arglists (quote ([compiled-path structure]))}, key-transform {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 475, :column 7, :end-line 475, :end-column 20, :arglists (quote ([akey structure next-fn]))}, :name com.rpl.specter.impl/key-transform, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 20, :method-params ([akey structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 475, :end-line 475, :max-fixed-arity 3, :fn-var true, :arglists (quote ([akey structure next-fn]))}, codewalk-until {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 411, :column 7, :end-line 411, :end-column 21, :arglists (quote ([pred on-match-fn structure]))}, :name com.rpl.specter.impl/codewalk-until, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 21, :method-params ([pred on-match-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred on-match-fn structure]))}, get-cell {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 365, :column 7, :end-line 365, :end-column 15, :arglists (quote ([cell]))}, :name com.rpl.specter.impl/get-cell, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 15, :method-params ([cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cell]))}, srange-transform {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 515, :column 7, :end-line 515, :end-column 23, :arglists (quote ([structure start end next-fn]))}, :name com.rpl.specter.impl/srange-transform, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 23, :method-params ([structure start end next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 515, :end-line 515, :max-fixed-arity 4, :fn-var true, :arglists (quote ([structure start end next-fn]))}, set-first {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 378, :column 4, :end-line 378, :end-column 13, :protocol com.rpl.specter.impl/SetExtremes, :doc nil, :arglists (quote ([s val]))}, :protocol com.rpl.specter.impl/SetExtremes, :name com.rpl.specter.impl/set-first, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 13, :method-params ([s val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 378, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s val])), :doc nil}, AllStructurePath {:num-fields 0, :protocols #{}, :name com.rpl.specter.impl/AllStructurePath, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :type true, :column 10, :line 479, :record false, :end-line 479, :skip-protocol-flag nil}, coerce-tfns-rich {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 268, :column 7, :end-line 268, :end-column 23, :arglists (quote ([tfns]))}, :name com.rpl.specter.impl/coerce-tfns-rich, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 23, :method-params ([tfns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tfns]))}, ->ValCollect {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 493, :column 10, :end-line 493, :end-column 20, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name com.rpl.specter.impl/->ValCollect, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 493, :end-line 493, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, fn-invocation? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 406, :column 8, :end-line 406, :end-column 22, :private true, :arglists (quote ([f]))}, :private true, :name com.rpl.specter.impl/fn-invocation?, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, walk-select {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 448, :column 7, :end-line 448, :end-column 18, :arglists (quote ([pred continue-fn structure]))}, :name com.rpl.specter.impl/walk-select, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 18, :method-params ([pred continue-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred continue-fn structure]))}, ->PosStructurePath {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-examples/resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :line 500, :column 10, :end-line 500, :end-column 26, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([getter setter]))}, :protocols #{}, :name com.rpl.specter.impl/->PosStructurePath, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter/impl.cljs", :end-column 26, :method-params ([getter setter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 500, :end-line 500, :max-fixed-arity 2, :fn-var true, :arglists (quote ([getter setter])), :skip-protocol-flag nil}}, :require-macros {com.rpl.specter.prot-opt-invoke com.rpl.specter.prot-opt-invoke, com.rpl.specter.defhelpers com.rpl.specter.defhelpers}, :cljs.analyzer/constants {:seen #{transform-fns :selector :richpath :transformer :executors :else :transform* q selector transformer :spath :params executors select-executor :num-needed-params :params-idx transform-executor params type :select* :collect-val setter num-needed-params params-idx :transform-fns :volatile-mutable getter}, :order [type select-executor transform-executor :richpath :spath :executors :selector :transformer executors selector transformer :transform-fns :params :params-idx transform-fns params params-idx :num-needed-params num-needed-params :select* :transform* :collect-val :else q :volatile-mutable getter setter]}, :doc nil}